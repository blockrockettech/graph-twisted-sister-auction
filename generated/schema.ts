// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  TypedMap,
  Entity,
  Value,
  ValueKind,
  store,
  Address,
  Bytes,
  BigInt,
  BigDecimal
} from "@graphprotocol/graph-ts";

export class Bid extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id !== null, "Cannot save Bid entity without an ID");
    assert(
      id.kind == ValueKind.STRING,
      "Cannot save Bid entity with non-string ID. " +
        'Considering using .toHex() to convert the "id" to a string.'
    );
    store.set("Bid", id.toString(), this);
  }

  static load(id: string): Bid | null {
    return store.get("Bid", id) as Bid | null;
  }

  get id(): string {
    let value = this.get("id");
    return value.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get _round(): BigInt {
    let value = this.get("_round");
    return value.toBigInt();
  }

  set _round(value: BigInt) {
    this.set("_round", Value.fromBigInt(value));
  }

  get _timeStamp(): BigInt {
    let value = this.get("_timeStamp");
    return value.toBigInt();
  }

  set _timeStamp(value: BigInt) {
    this.set("_timeStamp", Value.fromBigInt(value));
  }

  get _param(): BigInt {
    let value = this.get("_param");
    return value.toBigInt();
  }

  set _param(value: BigInt) {
    this.set("_param", Value.fromBigInt(value));
  }

  get _amount(): BigInt {
    let value = this.get("_amount");
    return value.toBigInt();
  }

  set _amount(value: BigInt) {
    this.set("_amount", Value.fromBigInt(value));
  }

  get _ethAmount(): BigDecimal {
    let value = this.get("_ethAmount");
    return value.toBigDecimal();
  }

  set _ethAmount(value: BigDecimal) {
    this.set("_ethAmount", Value.fromBigDecimal(value));
  }

  get _bidder(): Bytes {
    let value = this.get("_bidder");
    return value.toBytes();
  }

  set _bidder(value: Bytes) {
    this.set("_bidder", Value.fromBytes(value));
  }
}
